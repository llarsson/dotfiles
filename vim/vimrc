" vundle plugin management {{{
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

" sensible defaults by tpope
Plugin 'tpope/vim-sensible'

" the git plugin by tpope
Plugin 'tpope/vim-fugitive'

" figure out good settings based on filetypes
Plugin 'tpope/vim-sleuth'

" easily surround text with markers, such as curly braces
Plugin 'tpope/vim-surround'

" to make e.g. surrounds (see above) work with the repeat ('.') command
Plugin 'tpope/vim-repeat'

" finding files and contents
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'mileszs/ack.vim'

" make Tab work really well
Plugin 'ervandew/supertab'

" automatically add matching closing delimiters, such as parentheses
Plugin 'Raimondi/delimitMate'

" much improved status bar
Plugin 'bling/vim-airline'

" color scheme
"Plugin 'altercation/vim-colors-solarized'
"Plugin 'chriskempson/base16-vim'
Plugin 'ajh17/Spacegray.vim'

" Local plugins that I do not need everywhere
if filereadable(glob("~/.vimrc.local.plugins")) 
	source ~/.vimrc.local.plugins
endif

call vundle#end()
filetype plugin indent on
" }}}

" Obvious settings
syntax on

" The one true encoding!
set encoding=utf-8

" Typically, I want spell checking on
set spell

" Always work with logical lines, rather than screen lines
set linebreak
set textwidth=0

" Show partial commands entered in the last line
set showcmd

" Briefly show matching paren etc.
set showmatch

" Clever searching (ignores case unless a capital letter is present) and
" searches as I type
set ignorecase
set smartcase
set incsearch

" Write when switching to another file (not on tab change, of course)
set autowrite

" I only like particular folds, so only ones that I have asked for
set foldmethod=marker

" since I switch between layouts, the ',' is a good choice for leader
let mapleader = ","

" Don't suggest the following when looking for files to open
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.eps,.ps,.pdf,.pyc

" color scheme {{{
set background=dark
set t_Co=256
" for some reason, the below makes spelling errors show up
" https://github.com/altercation/vim-colors-solarized/issues/195
" set t_Cs=
" }}}

" airline {{{
let g:airline_powerline_fonts = 1
let g:airline_extensions = []
set laststatus=2
" }}}

" Easier to hit keys for start/end of line
nnoremap H ^
nnoremap L $

" Grepping like a pro
nnoremap <Leader>g :Ack!<Space>

" Persistent undo files should not clutter our directories
set undodir=~/.vim/undo

" Fugitive keys
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gc :Gcommit<CR>
nnoremap <Leader>gd :Gdiff<CR>

" ack.vim settings {{{
" Ack 2.0 has some -s option that 1.96 (Ubuntu 14.04's version) does not
let g:ack_default_options = " -H --nocolor --nogroup --column "
" }}}

" No common words ever have jjj as part of their correct spelling, make it a
" new Escape
imap jjj <Esc>

" Change active split {{{
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
" }}}

" More natural split ordering {{{
set splitbelow
set splitright
" }}}

" Completion settings {{{

" https://vim.fandom.com/wiki/Omni_completion
set omnifunc=syntaxcomplete#Complete

" https://vim.fandom.com/wiki/Omni_completion_popup_menu
let g:SuperTabDefaultCompletionType = 'context'

inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
" }}}

" ctrlp {{{
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_working_path_mode = 'ra'
" }}}

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tar.*,*.pdf,*.class,*.pyc

" Have Vim jump to the last position when reopening a file
if has("autocmd")
     :au BufReadPost *
	 \ if line("'\"") > 1 && line("'\"") <= line("$") && &ft !~# 'commit'
	 \ |   exe "normal! g`\""
	 \ | endif
endif

" I love narrow tabs for all source code
set tabstop=2

" listchars
set list
set listchars=trail:·,tab:»·


" additional per-host settings, if any
if filereadable(glob("~/.vimrc.local"))
	source ~/.vimrc.local
endif

